// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL") // uses connection pooling
  directUrl = env("DIRECT_URL") // uses a direct connection
}

model Menu {
  id          Int       @id @default(autoincrement())
  name        String
  description String    @default("")
  price       Int
  stock       Int       @default(0)
  image       String?
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  deletedAt   DateTime?
  stockData   Stock[]
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
  menus     Menu[]
}

model User {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  username  String
  password  String
  role      String    @default("staff")
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
  Stock     Stock[]
}

model Sesi {
  id        Int       @id @default(autoincrement())
  name      String
  startTime DateTime
  endTime   DateTime
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}

model Stock {
  id          Int       @id @default(autoincrement())
  menu        Menu      @relation(fields: [menuId], references: [id])
  menuId      Int
  quantity    Int
  type        String
  reference   String //transaksi / stok awal
  referenceId Int?
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  deletedAt   DateTime?
}
